{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vats/Resto_config_2022/appconfig_bis/src/screens/Identification/index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useRef } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { userContext } from \"../../contexts/userContext\";\nimport { sendAPI } from \"../../components/sendAPI\";\nimport * as Device from 'expo-device';\nimport * as SecureStore from 'expo-secure-store';\nimport constantes from \"../../constantes\";\nimport styles from \"../../styles\";\nimport logo from \"../../../assets/logoRdC.png\";\nexport default function IdScreen(_ref) {\n  var navigation = _ref.navigation;\n  var registerForPushNotificationsAsync = React.useContext(userContext).registerForPushNotificationsAsync;\n  var refMdp = useRef(null);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      textEmail = _React$useState2[0],\n      onChangeTextEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      textPassword = _React$useState4[0],\n      onChangeTextPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loading = _React$useState6[0],\n      setLoading = _React$useState6[1];\n\n  var changeID = React.useContext(userContext).changeID;\n  var changeToken = React.useContext(userContext).changeToken;\n  var handleError = React.useContext(userContext).handleError;\n\n  function checkPassword() {\n    if (textEmail != '' && textPassword != '') {\n      setLoading(true);\n      sendAPI('AUT', 'AP_LOGIN', {\n        'email': textEmail,\n        'motDePasse': textPassword\n      }).then(function _callee(data) {\n        var device, token;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(Device.getDeviceTypeAsync());\n\n              case 2:\n                device = _context.sent;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(registerForPushNotificationsAsync(device));\n\n              case 5:\n                token = _context.sent;\n\n                if (data.tokennotification != token && token != \"-1\") {\n                  sendAPI('APP', 'AP_UPD_NOTIF', {\n                    'P_IDBENEVOLE': data.id,\n                    'P_TOKENNOTIF': token\n                  }, data.token).catch(function (error) {\n                    handleError(error);\n                    setLoading(false);\n                  });\n                }\n\n                login(data);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }).catch(function (error) {\n        handleError(error);\n        setLoading(false);\n      });\n      onChangeTextPassword('');\n    }\n  }\n\n  function login(data) {\n    if (Device.brand) {\n      SecureStore.setItemAsync('id', data.id);\n      SecureStore.setItemAsync('token', data.token);\n    }\n\n    changeToken(data.token);\n    changeID(data.id);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: [styles.container, {\n      alignItems: \"center\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }), React.createElement(Text, {\n    style: styles.idTexte,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Adresse mail\"), React.createElement(TextInput, {\n    style: styles.idInput,\n    placeholder: \"votre@email.fr\",\n    onChangeText: onChangeTextEmail,\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoCompleteType: \"email\",\n    autoCorrect: false,\n    onSubmitEditing: function onSubmitEditing() {\n      return refMdp.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }), React.createElement(Text, {\n    style: styles.idTexte,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }, \"Mot de passe\"), React.createElement(TextInput, {\n    ref: refMdp,\n    style: styles.idInput,\n    placeholder: \"********\",\n    secureTextEntry: true,\n    onChangeText: onChangeTextPassword,\n    value: textPassword,\n    textContentType: \"password\",\n    onSubmitEditing: function onSubmitEditing() {\n      return checkPassword();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return checkPassword();\n    },\n    title: \"CONNEXION\",\n    color: \"#e7007d\",\n    accessibilityLabel: \"Bouton de connexion\",\n    testID: \"LoginButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }\n  }), React.createElement(Pressable, {\n    title: \"mdp\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Oublie\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles.idTexte,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  }, \"Mot de passe oubli\\xE9 ?\"))), loading && React.createElement(View, {\n    style: styles.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#e92682\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"names":["React","useRef","userContext","sendAPI","Device","SecureStore","constantes","styles","logo","IdScreen","navigation","registerForPushNotificationsAsync","useContext","refMdp","useState","textEmail","onChangeTextEmail","textPassword","onChangeTextPassword","loading","setLoading","changeID","changeToken","handleError","checkPassword","then","data","getDeviceTypeAsync","device","token","tokennotification","id","catch","error","login","brand","setItemAsync","container","alignItems","idTexte","idInput","current","focus","navigate"],"sources":["/home/vats/Resto_config_2022/appconfig_bis/src/screens/Identification/index.js"],"sourcesContent":["import React, {useRef } from 'react';\nimport { Button, Text, View, Image, TextInput, Pressable, ActivityIndicator} from 'react-native';\n\nimport {userContext} from '../../contexts/userContext';\nimport {sendAPI} from '../../components/sendAPI';\n\nimport * as Device from 'expo-device';\nimport * as SecureStore from 'expo-secure-store';\n\nimport constantes from '../../constantes';\nimport styles from '../../styles';\nimport logo from '../../../assets/logoRdC.png';\n\n\n\n\nexport default function IdScreen({navigation}) {\n\n\t// On récupère la fonction pour gérer le token de notification\n\tconst registerForPushNotificationsAsync = React.useContext(userContext).registerForPushNotificationsAsync;\n\n\tconst refMdp = useRef(null);\n\n\tconst [textEmail, onChangeTextEmail] = React.useState('');\n\tconst [textPassword, onChangeTextPassword] = React.useState('');\n\n\tconst [loading, setLoading] = React.useState(false);\n\t\n\tconst changeID = React.useContext(userContext).changeID;\n\tconst changeToken = React.useContext(userContext).changeToken;\n\t\n    //Handler des erreurs de serveur\n    const handleError = React.useContext(userContext).handleError;\n  \n  function checkPassword() {\n\tif (textEmail != '' && textPassword != '') {\n\t\tsetLoading(true);\n\t\tsendAPI('AUT', 'AP_LOGIN', {'email':textEmail, 'motDePasse':textPassword})\t\n\t\t.then(async function (data){\n\t\t\t\n\t\t\tconst device = await Device.getDeviceTypeAsync();\n\t\t\tconst token = await registerForPushNotificationsAsync(device);\n\t\t\t\n\t\t\t//On n'envoie le token de notification que s'il est différent de celui stocké sur le serveur\n\t\t\tif (data.tokennotification != token && token != \"-1\"){\n\t\t\t\tsendAPI('APP', 'AP_UPD_NOTIF', {'P_IDBENEVOLE':data.id, 'P_TOKENNOTIF':token}, data.token)\n\t\t\t\t.catch((error) => {handleError(error); setLoading(false)});\n\t\t\t}\n\t\t\tlogin(data);\n\t\t})\n\t\t.catch((error) => {handleError(error); setLoading(false)})\n\t\t  \n\t\tonChangeTextPassword(''); //On vide le champ mot de passe\n\t}\n  }\n  \n  \n  function login(data) {\n\t  if (Device.brand){\n\t\tSecureStore.setItemAsync('id', data.id);\n\t\tSecureStore.setItemAsync('token', data.token);\n\t  }\n\t  changeToken(data.token);\n\t  changeID(data.id);\n    }\n\n  return (\n    <>\n    <View style={[styles.container,{alignItems: \"center\"}]}>\n\t  <Image\n\t\tstyle={styles.logo}\n        source={logo}\n      />\n      <Text style={styles.idTexte}>Adresse mail</Text>\n\t  <TextInput\n\t\tstyle={styles.idInput}\n\t\tplaceholder=\"votre@email.fr\"\n\t\tonChangeText={onChangeTextEmail}\n\t\tkeyboardType = \"email-address\"\n\t\ttextContentType = \"emailAddress\"\n\t\tautoCompleteType = \"email\"\n\t\tautoCorrect = {false}\n\t\tonSubmitEditing={() => refMdp.current.focus()}\n\t  />\n\t  <Text style={styles.idTexte}>Mot de passe</Text>\n\t  <TextInput\n\t  \tref={refMdp}\n\t\tstyle={styles.idInput}\n\t\tplaceholder=\"********\"\n\t\tsecureTextEntry = {true}\n        onChangeText={onChangeTextPassword}\n\t\tvalue={textPassword}\n\t\ttextContentType = \"password\"\n\t\tonSubmitEditing={() => checkPassword()}\n\n\t  />\n\t  <Button\n\t\tonPress = {() => checkPassword()} //{() => navigation.navigate('Engagements')}\n\t\ttitle=\"CONNEXION\"\n\t\tcolor=\"#e7007d\"\n\t\taccessibilityLabel=\"Bouton de connexion\"\n\t\ttestID=\"LoginButton\"\n\n\t  />\n\t  <Pressable title = \"mdp\" onPress = {() => navigation.navigate(\"Oublie\")} >\n\t\t<Text style={styles.idTexte}>Mot de passe oublié ?</Text>\n\t  </Pressable>\n    </View>\n\t{loading &&\n    <View style={styles.loading}>\n      <ActivityIndicator size=\"large\" color=\"#e92682\" />\n    </View>\n\t}\n    </>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}