{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vats/Resto_config_2022/appconfig_bis/src/screens/MdpOublie/index.js\";\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styles from \"../../styles\";\nimport { userContext } from \"../../contexts/userContext\";\nimport { sendAPI } from \"../../components/sendAPI\";\n\nfunction oublieScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      textEmail = _React$useState2[0],\n      onChangeTextEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var handleError = React.useContext(userContext).handleError;\n  var fctModalApp = React.useContext(userContext).fctModalApp;\n\n  function resetPassword() {\n    var regexMail = /^(?:[a-zA-Z0-9!#$%&'*+/=?^_‘{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_‘{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/;\n\n    if (!regexMail.test(textEmail)) {\n      fctModalApp(\"Attention\", \"Email non valide\");\n    } else {\n      if (textEmail != '') {\n        setLoading(true);\n        sendAPI('AUT', 'AP_RST_MOTDEPASSE', {\n          'email': textEmail\n        }).then(function (json) {\n          fctModalApp(\"succès\", \"Si cette adresse est associée à un compte, un mail contenant un lien pour réinitialiser votre mot de passe vient de vous être envoyé. Si vous n'avez rien reçu, vérifiez votre dossier de spam et réessayez dans quelques minutes.\");\n          setLoading(false);\n          navigation.goBack();\n        }).catch(function (error) {\n          setLoading(false);\n          handleError(error);\n        });\n        onChangeTextEmail(\"\");\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: [styles.container, {\n      alignItems: \"center\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 2\n    }\n  }, React.createElement(Text, {\n    style: styles.idTexte,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Entrez votre addresse email ci-dessous. Un nouveau mot de passe vous sera envoy\\xE9.\"), React.createElement(TextInput, {\n    style: styles.idInput,\n    placeholder: \"votre@email.fr\",\n    onChangeText: onChangeTextEmail,\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoCompleteType: \"email\",\n    autoCorrect: false,\n    onSubmitEditing: function onSubmitEditing() {\n      return resetPassword();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return resetPassword();\n    },\n    title: \"ENVOYER\",\n    color: \"#e7007d\",\n    accessibilityLabel: \"Envoyer email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  })), loading && React.createElement(View, {\n    style: styles.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#e92682\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default oublieScreen;","map":{"version":3,"names":["React","styles","userContext","sendAPI","oublieScreen","navigation","useState","textEmail","onChangeTextEmail","loading","setLoading","handleError","useContext","fctModalApp","resetPassword","regexMail","test","then","json","goBack","catch","error","container","alignItems","idTexte","idInput"],"sources":["/home/vats/Resto_config_2022/appconfig_bis/src/screens/MdpOublie/index.js"],"sourcesContent":["import React from 'react';\nimport { ActivityIndicator, Text, View} from 'react-native';\nimport {TextInput, Button} from 'react-native';\n\nimport styles from '../../styles';\nimport {userContext} from '../../contexts/userContext';\nimport {sendAPI} from '../../components/sendAPI';\n\n\nfunction oublieScreen({navigation}){\n  const [textEmail, onChangeTextEmail] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  \n  const handleError = React.useContext(userContext).handleError;\n\n  // On récupère la fonction pour gérer le modal d'informations\n  const fctModalApp = React.useContext(userContext).fctModalApp;\n  \n  function resetPassword() {\n\t\n\t// Regex\n    var regexMail = /^(?:[a-zA-Z0-9!#$%&'*+/=?^_‘{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_‘{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/;\n    \n\tif( !regexMail.test(textEmail) ){\n\t\tfctModalApp(\"Attention\", \"Email non valide\");\n\t}\n\telse{\n\n\t\tif (textEmail != '') {\n\t\t\tsetLoading(true);\n\t\t\tsendAPI('AUT', 'AP_RST_MOTDEPASSE',{'email':textEmail})\n\t\t\t.then((json) => {\n\t\t\t\tfctModalApp(\"succès\", \"Si cette adresse est associée à un compte, un mail contenant un lien pour réinitialiser votre mot de passe vient de vous être envoyé. Si vous n'avez rien reçu, vérifiez votre dossier de spam et réessayez dans quelques minutes.\");\n\t\t\t\tsetLoading(false);\n\t\t\t\tnavigation.goBack();\n\t\t\t})\n\t\t\t.catch((error) => {setLoading(false); handleError (error)});\n\t\t\t\n\t\t\tonChangeTextEmail(\"\"); //On vide le champ email\n\t\t}\n\t}\n  }\n  \n  return (\n    <>\n\t<View style={[styles.container,{alignItems: \"center\"}]}>\n      <Text style={styles.idTexte}>Entrez votre addresse email ci-dessous. Un nouveau mot de passe vous sera envoyé.</Text>\n\t  <TextInput\n\t\tstyle={styles.idInput}\n\t\tplaceholder=\"votre@email.fr\"\n\t\tonChangeText={onChangeTextEmail}\n\t\tkeyboardType = \"email-address\"\n\t\ttextContentType = \"emailAddress\"\n\t\tautoCompleteType = \"email\"\n\t\tautoCorrect = {false}\n\t\tonSubmitEditing={() => resetPassword()}\n\t  />\n\t  <Button\n\t\tonPress = {() => resetPassword()}\n\t\ttitle=\"ENVOYER\"\n\t\tcolor=\"#e7007d\"\n\t\taccessibilityLabel=\"Envoyer email\"\n\t  />\t  \t\n    </View>\n\t{loading &&\n    <View style={styles.loading}>\n      <ActivityIndicator size=\"large\" color=\"#e92682\" />\n    </View>\n\t}\n    </>\n  );\n\n}\n\nexport default oublieScreen;"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAIA,OAAOC,MAAP;AACA,SAAQC,WAAR;AACA,SAAQC,OAAR;;AAGA,SAASC,YAAT,OAAmC;EAAA,IAAZC,UAAY,QAAZA,UAAY;;EACjC,sBAAuCL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAvC;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,iBAAlB;;EACA,uBAA8BR,KAAK,CAACM,QAAN,CAAe,KAAf,CAA9B;EAAA;EAAA,IAAOG,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,IAAMC,WAAW,GAAGX,KAAK,CAACY,UAAN,CAAiBV,WAAjB,EAA8BS,WAAlD;EAGA,IAAME,WAAW,GAAGb,KAAK,CAACY,UAAN,CAAiBV,WAAjB,EAA8BW,WAAlD;;EAEA,SAASC,aAAT,GAAyB;IAGvB,IAAIC,SAAS,GAAG,4cAAhB;;IAEH,IAAI,CAACA,SAAS,CAACC,IAAV,CAAeT,SAAf,CAAL,EAAgC;MAC/BM,WAAW,CAAC,WAAD,EAAc,kBAAd,CAAX;IACA,CAFD,MAGI;MAEH,IAAIN,SAAS,IAAI,EAAjB,EAAqB;QACpBG,UAAU,CAAC,IAAD,CAAV;QACAP,OAAO,CAAC,KAAD,EAAQ,mBAAR,EAA4B;UAAC,SAAQI;QAAT,CAA5B,CAAP,CACCU,IADD,CACM,UAACC,IAAD,EAAU;UACfL,WAAW,CAAC,QAAD,EAAW,oOAAX,CAAX;UACAH,UAAU,CAAC,KAAD,CAAV;UACAL,UAAU,CAACc,MAAX;QACA,CALD,EAMCC,KAND,CAMO,UAACC,KAAD,EAAW;UAACX,UAAU,CAAC,KAAD,CAAV;UAAmBC,WAAW,CAAEU,KAAF,CAAX;QAAoB,CAN1D;QAQAb,iBAAiB,CAAC,EAAD,CAAjB;MACA;IACD;EACC;;EAED,OACE,0CACH,oBAAC,IAAD;IAAM,KAAK,EAAE,CAACP,MAAM,CAACqB,SAAR,EAAkB;MAACC,UAAU,EAAE;IAAb,CAAlB,CAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACK,oBAAC,IAAD;IAAM,KAAK,EAAEtB,MAAM,CAACuB,OAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0FADL,EAEE,oBAAC,SAAD;IACD,KAAK,EAAEvB,MAAM,CAACwB,OADb;IAED,WAAW,EAAC,gBAFX;IAGD,YAAY,EAAEjB,iBAHb;IAID,YAAY,EAAG,eAJd;IAKD,eAAe,EAAG,cALjB;IAMD,gBAAgB,EAAG,OANlB;IAOD,WAAW,EAAI,KAPd;IAQD,eAAe,EAAE;MAAA,OAAMM,aAAa,EAAnB;IAAA,CARhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,EAYE,oBAAC,MAAD;IACD,OAAO,EAAI;MAAA,OAAMA,aAAa,EAAnB;IAAA,CADV;IAED,KAAK,EAAC,SAFL;IAGD,KAAK,EAAC,SAHL;IAID,kBAAkB,EAAC,eAJlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAZF,CADG,EAoBFL,OAAO,IACL,oBAAC,IAAD;IAAM,KAAK,EAAER,MAAM,CAACQ,OAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,oBAAC,iBAAD;IAAmB,IAAI,EAAC,OAAxB;IAAgC,KAAK,EAAC,SAAtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CArBA,CADF;AA6BD;;AAED,eAAeL,YAAf"},"metadata":{},"sourceType":"module"}