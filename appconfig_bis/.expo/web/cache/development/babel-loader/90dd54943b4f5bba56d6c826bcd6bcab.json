{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vats/Resto_config_2022/appconfig_bis/src/components/modalContact.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useToast } from \"react-native-toast-notifications\";\nimport { normalizeInputPhone } from \"./normalizeInputPhone\";\nimport { userContext } from \"../contexts/userContext\";\nimport styles from \"../styles\";\nimport * as Clipboard from 'expo-clipboard';\nimport * as Device from 'expo-device';\nimport logoVide from \"../../assets/logovide.png\";\n\nvar ModalContact = function ModalContact(props) {\n  var fctModalMail = React.useContext(userContext).fctModalMail;\n  var idDestinataire = props.idDestinataire;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      toClipboard = _useState2[0],\n      setToClipboard = _useState2[1];\n\n  var toast = useToast();\n  useEffect(function () {\n    if (toClipboard != \"\") {\n      Clipboard.setString(toClipboard);\n    }\n\n    setToClipboard(\"\");\n  }, [toClipboard]);\n\n  var toastComponent = function toastComponent(texte) {\n    toast.show(texte, {\n      type: \"normal\",\n      position: \"bottom\",\n      duration: 2000,\n      offset: 30,\n      animationType: \"zoom-in\"\n    });\n  };\n\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: props.visible,\n    onRequestClose: function onRequestClose() {\n      props.setVisible(!props.visible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 2\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    source: logoVide,\n    resizeMode: \"cover\",\n    style: styles.modalContactView,\n    imageStyle: styles.modalContactView2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.modalContactTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Informations de contact\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    textAlign: \"center\",\n    onPress: function onPress() {\n      setToClipboard(props.mail);\n      Device.brand ? toastComponent('Copié dans le presse-papier') : alert('Copié dans le presse-papier');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, props.mail), React.createElement(Text, {\n    style: styles.modalText,\n    textAlign: \"center\",\n    onPress: function onPress() {\n      setToClipboard(props.phone);\n      Device.brand ? toastComponent('Copié dans le presse-papier') : alert('Copié dans le presse-papier');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, normalizeInputPhone(props.phone))), React.createElement(View, {\n    style: styles.modalContactButtonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(Pressable, {\n    style: styles.buttonContactLeft,\n    onPress: function onPress() {\n      return props.setVisible(!props.visible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, function (_ref) {\n    var pressed = _ref.pressed;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: pressed ? \"lightgrey\" : \"black\",\n        fontWeight: \"bold\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"OK\"));\n  }), Device.brand && React.createElement(Pressable, {\n    style: [styles.buttonContactMid, {\n      marginRight: 10\n    }],\n    onPress: function onPress() {\n      props.setVisible(!props.visible);\n      Linking.openURL(\"sms:\" + props.phone);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 32\n    }\n  }, function (_ref2) {\n    var pressed = _ref2.pressed;\n    return React.createElement(Text, {\n      style: [styles.textContactStyle, {\n        color: pressed ? \"lightgrey\" : \"black\",\n        fontWeight: \"bold\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, \"SMS\");\n  }), React.createElement(Pressable, {\n    style: [styles.buttonContactRight],\n    onPress: function onPress() {\n      props.setVisible(!props.visible);\n      fctModalMail([idDestinataire]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, function (_ref3) {\n    var pressed = _ref3.pressed;\n    return React.createElement(Text, {\n      style: [styles.textContactStyle, {\n        color: pressed ? \"lightgrey\" : \"black\",\n        fontWeight: \"bold\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, \"MAIL\");\n  })))));\n};\n\nexport default ModalContact;","map":{"version":3,"names":["React","useEffect","useState","useToast","normalizeInputPhone","userContext","styles","Clipboard","Device","logoVide","ModalContact","props","fctModalMail","useContext","idDestinataire","toClipboard","setToClipboard","toast","setString","toastComponent","texte","show","type","position","duration","offset","animationType","visible","setVisible","centeredView","modalContactView","modalContactView2","modalContactTitle","modalText","mail","brand","alert","phone","modalContactButtonView","buttonContactLeft","pressed","color","fontWeight","buttonContactMid","marginRight","Linking","openURL","textContactStyle","buttonContactRight"],"sources":["/home/vats/Resto_config_2022/appconfig_bis/src/components/modalContact.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {Text, View} from 'react-native';\nimport {Linking, ImageBackground} from 'react-native';\nimport {Pressable, Modal} from 'react-native';\n\nimport { useToast } from \"react-native-toast-notifications\";\nimport {normalizeInputPhone} from './normalizeInputPhone';\nimport {userContext} from '../contexts/userContext';\n\nimport styles from '../styles';\nimport * as Clipboard from 'expo-clipboard';\nimport * as Device from 'expo-device';\n\nimport logoVide from '../../assets/logovide.png';\n\n\n\nconst ModalContact = (props) => {\n\n  \n  // On récupère la fonction pour gérer le modal d'Email\n  const fctModalMail = React.useContext(userContext).fctModalMail;\n\n  const idDestinataire = props.idDestinataire;\n\t\n  const [toClipboard, setToClipboard] = useState(\"\");\n\n  // Toast\n  const toast = useToast();\n\t  \n\t  \n  useEffect(() => {\n\tif (toClipboard != \"\") {\n\t  Clipboard.setString(toClipboard);\n\t}\n\tsetToClipboard(\"\");\n  }, [toClipboard]);\n\n\n  // Affiche le toast\n  const toastComponent = (texte) => {\n        \n    toast.show(texte, {\n        type: \"normal\",\n        position: \"bottom\",\n        duration: 2000,\n        offset: 30,\n        animationType: \"zoom-in\",\n      });\n  };\n\t\n\treturn(\n\t<Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={props.visible}\n      onRequestClose={() => {\n        props.setVisible(!props.visible);\n      }}\n    >\n      <View style={styles.centeredView}>\n          <ImageBackground source={logoVide} resizeMode=\"cover\" style={styles.modalContactView} imageStyle={styles.modalContactView2}>\n\t\t        <Text style={styles.modalContactTitle}>Informations de contact</Text>\n            <View>\n              <Text style={styles.modalText} textAlign=\"center\" onPress={() => {setToClipboard(props.mail); Device.brand ? toastComponent('Copié dans le presse-papier') : alert('Copié dans le presse-papier');}}>{props.mail}</Text>\n              <Text style={styles.modalText} textAlign=\"center\" onPress={() => {setToClipboard(props.phone);Device.brand ? toastComponent('Copié dans le presse-papier') : alert('Copié dans le presse-papier');}}>{normalizeInputPhone(props.phone)}</Text>\n            </View>\n            <View style={styles.modalContactButtonView}>\n              <Pressable\n                style={styles.buttonContactLeft}\n                onPress={() => props.setVisible(!props.visible)}\n              >\n                {({ pressed }) => (\n                  <View>\n                    <Text style={{color:pressed?\"lightgrey\":\"black\", fontWeight: \"bold\"}}>OK</Text>\n                  </View>\n                )}\n              </Pressable>\n              {Device.brand && <Pressable\n                style={[styles.buttonContactMid, {marginRight: 10}]}\n                onPress={() => {props.setVisible(!props.visible); Linking.openURL(`sms:${props.phone}`);}}\n              >\n                {({ pressed }) => (\n                  <Text style={[styles.textContactStyle, {color:pressed?\"lightgrey\":\"black\", fontWeight: \"bold\"}]}>SMS</Text>\n                )}\n              </Pressable>}\n              <Pressable\n                style={[styles.buttonContactRight]}\n                onPress={() => {props.setVisible(!props.visible); fctModalMail([idDestinataire]);}}\n              >\n                {({ pressed }) => (\n                  <Text style={[styles.textContactStyle, {color:pressed?\"lightgrey\":\"black\", fontWeight: \"bold\"}]}>MAIL</Text>\n                )}\n              </Pressable>\n            </View>\n          </ImageBackground>\n        </View>\n    </Modal>\t\n);}\n\nexport default ModalContact;"],"mappings":"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"},"metadata":{},"sourceType":"module"}