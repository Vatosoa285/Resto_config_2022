{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { useEffect, useState } from 'react';\nexport var modeAffichage = function modeAffichage(data, visibleData, setVisibleData, setAncienMode, ancienMode, modeChoisi, header, setHeader) {\n  var cpyData = _toConsumableArray(data);\n\n  var cpyVisibleData = _toConsumableArray(visibleData);\n\n  var cpyHeader = header;\n\n  if (ancienMode === modeChoisi) {\n    cpyHeader[modeChoisi] = \"\\u25BC\";\n  } else {\n    Object.keys(header).forEach(function (h, index) {\n      cpyHeader[h] = \"\";\n    });\n    cpyHeader[modeChoisi] = \"\\u25B2\";\n  }\n\n  setHeader(cpyHeader);\n\n  if (ancienMode === modeChoisi) {\n    setVisibleData(cpyVisibleData.reverse());\n    setAncienMode(null);\n  } else {\n    if (modeChoisi === \"jourdefaut\") {\n      setVisibleData(cpyData);\n    } else {\n      cpyVisibleData.sort(function (a, b) {\n        return a[modeChoisi].localeCompare(b[modeChoisi]);\n      });\n      setVisibleData(cpyVisibleData);\n    }\n\n    setAncienMode(modeChoisi);\n  }\n};","map":{"version":3,"names":["React","useEffect","useState","modeAffichage","data","visibleData","setVisibleData","setAncienMode","ancienMode","modeChoisi","header","setHeader","cpyData","cpyVisibleData","cpyHeader","Object","keys","forEach","h","index","reverse","sort","a","b","localeCompare"],"sources":["/home/vats/Resto_config_2022/appconfig_bis/src/components/modeAffichage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n\r\n/*\r\n*\r\n* data = Row Data, Data originelles afin de retrouver l'ordre pour les jours\r\n* visibleData = Data actuellement affichées, pour les inverser si necessaires\r\n* setVisibleData = Setter des visibleData, afin d'afficher les modifications éffectuées\r\n*\r\n* setAncienMode = setter\r\n* ancienMode = mode précédement cliqué et traité\r\n* modeChoisi = mode cliqué à l'instant et en cours de traitement, vaut le nom du champs json\r\n*\r\n* header = json servant à affiché la flèche sur le bon header, utilise aussi la clé : \"mode\"\r\n* setHeader = Setter du header\r\n*\r\n*/\r\nexport const modeAffichage = (data, visibleData, setVisibleData, setAncienMode, ancienMode, modeChoisi, header, setHeader) => {\r\n\r\n    // On garde en mémoire \r\n    const cpyData = [...data];\r\n    const cpyVisibleData = [...visibleData]; // cpy of array\r\n    const cpyHeader = header;\r\n\r\n\r\n    // On met à jour le header\r\n    if( ancienMode === modeChoisi ){\r\n        cpyHeader[modeChoisi] = \"\\u25BC\";\r\n    }\r\n    else{\r\n        Object.keys(header).forEach((h, index) => {\r\n            cpyHeader[h] = \"\";\r\n        })\r\n        cpyHeader[modeChoisi] = \"\\u25B2\";\r\n    }\r\n    setHeader( cpyHeader );\r\n    \r\n\r\n    // Si on clique 2 fois (modulo 2) quelque part\r\n    if( ancienMode === modeChoisi ){\r\n        // On inverse la liste visible actuelle\r\n        setVisibleData( cpyVisibleData.reverse() )\r\n\r\n        // On met l'index actif à null afin d'afficher le prochain élément dnas l'ordre normal, peu importe où l'on clique\r\n        setAncienMode( null );\r\n    }\r\n\r\n    // Si on clique pour la 1ere fois (modulo 2) sur un header\r\n    else{\r\n        // Si s'est un jour, on laisse l'ordre de base\r\n        if( modeChoisi === \"jourdefaut\" ){\r\n            setVisibleData( cpyData );\r\n        }\r\n        // Sinon, on trie\r\n        else{\r\n            //cpyVisibleData.sort((a, b) => a.split(/\\t/)[indexChoisi] > b.split(/\\t/)[indexChoisi]);\r\n            cpyVisibleData.sort( (a,b) => a[modeChoisi].localeCompare(b[modeChoisi]) );\r\n            setVisibleData( cpyVisibleData );\r\n        }\r\n\r\n        setAncienMode( modeChoisi );\r\n        \r\n    }\r\n\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAiBA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,WAAP,EAAoBC,cAApB,EAAoCC,aAApC,EAAmDC,UAAnD,EAA+DC,UAA/D,EAA2EC,MAA3E,EAAmFC,SAAnF,EAAiG;EAG1H,IAAMC,OAAO,sBAAOR,IAAP,CAAb;;EACA,IAAMS,cAAc,sBAAOR,WAAP,CAApB;;EACA,IAAMS,SAAS,GAAGJ,MAAlB;;EAIA,IAAIF,UAAU,KAAKC,UAAnB,EAA+B;IAC3BK,SAAS,CAACL,UAAD,CAAT,GAAwB,QAAxB;EACH,CAFD,MAGI;IACAM,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,OAApB,CAA4B,UAACC,CAAD,EAAIC,KAAJ,EAAc;MACtCL,SAAS,CAACI,CAAD,CAAT,GAAe,EAAf;IACH,CAFD;IAGAJ,SAAS,CAACL,UAAD,CAAT,GAAwB,QAAxB;EACH;;EACDE,SAAS,CAAEG,SAAF,CAAT;;EAIA,IAAIN,UAAU,KAAKC,UAAnB,EAA+B;IAE3BH,cAAc,CAAEO,cAAc,CAACO,OAAf,EAAF,CAAd;IAGAb,aAAa,CAAE,IAAF,CAAb;EACH,CAND,MASI;IAEA,IAAIE,UAAU,KAAK,YAAnB,EAAiC;MAC7BH,cAAc,CAAEM,OAAF,CAAd;IACH,CAFD,MAII;MAEAC,cAAc,CAACQ,IAAf,CAAqB,UAACC,CAAD,EAAGC,CAAH;QAAA,OAASD,CAAC,CAACb,UAAD,CAAD,CAAce,aAAd,CAA4BD,CAAC,CAACd,UAAD,CAA7B,CAAT;MAAA,CAArB;MACAH,cAAc,CAAEO,cAAF,CAAd;IACH;;IAEDN,aAAa,CAAEE,UAAF,CAAb;EAEH;AAEJ,CA/CM"},"metadata":{},"sourceType":"module"}