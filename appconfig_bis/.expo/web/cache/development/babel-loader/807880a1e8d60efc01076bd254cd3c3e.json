{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var checkFetch = function checkFetch(response) {\n  var apCode,\n      type,\n      json,\n      texte,\n      _args = arguments;\n  return _regeneratorRuntime.async(function checkFetch$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          apCode = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'APP';\n          type = response.headers.get('Content-Type');\n\n          if (!(type == \"application/json\")) {\n            _context.next = 15;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 5:\n          json = _context.sent;\n\n          if (!response.ok) {\n            _context.next = 14;\n            break;\n          }\n\n          if (!(apCode === 'APP')) {\n            _context.next = 11;\n            break;\n          }\n\n          return _context.abrupt(\"return\", Object.values(json.data));\n\n        case 11:\n          return _context.abrupt(\"return\", json);\n\n        case 12:\n          _context.next = 15;\n          break;\n\n        case 14:\n          throw json.error;\n\n        case 15:\n          _context.next = 17;\n          return _regeneratorRuntime.awrap(response.text());\n\n        case 17:\n          texte = _context.sent;\n          throw texte;\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"names":["checkFetch","response","apCode","type","headers","get","json","ok","Object","values","data","error","text","texte"],"sources":["/home/vats/Resto_config_2022/appconfig_bis/src/components/checkFetch.js"],"sourcesContent":["export const  checkFetch = async function(response, apCode = 'APP') {\r\n\r\n    const type = response.headers.get('Content-Type');\r\n\r\n    if( type == \"application/json\" ){\r\n        const json = await response.json();\r\n        \r\n        if(response.ok){\r\n            \r\n\t\t\tif (apCode === 'APP') {\r\n              return Object.values(json.data);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t  return json;\r\n\t\t\t}\r\n        }\r\n        else{\r\n            throw json.error;\r\n        }\r\n        \r\n    }\r\n\r\n    var texte = await response.text();\r\n    throw texte;\r\n\t\r\n}"],"mappings":";AAAA,OAAO,IAAOA,UAAU,GAAG,SAAbA,UAAa,CAAeC,QAAf;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAAA;QAAA;UAAyBC,MAAzB,2DAAkC,KAAlC;UAEjBC,IAFiB,GAEVF,QAAQ,CAACG,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAFU;;UAAA,MAInBF,IAAI,IAAI,kBAJW;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAKAF,QAAQ,CAACK,IAAT,EALA;;QAAA;UAKbA,IALa;;UAAA,KAOhBL,QAAQ,CAACM,EAPO;YAAA;YAAA;UAAA;;UAAA,MASpBL,MAAM,KAAK,KATS;YAAA;YAAA;UAAA;;UAAA,iCAUNM,MAAM,CAACC,MAAP,CAAcH,IAAI,CAACI,IAAnB,CAVM;;QAAA;UAAA,iCAafJ,IAbe;;QAAA;UAAA;UAAA;;QAAA;UAAA,MAiBTA,IAAI,CAACK,KAjBI;;QAAA;UAAA;UAAA,iCAsBLV,QAAQ,CAACW,IAAT,EAtBK;;QAAA;UAsBnBC,KAtBmB;UAAA,MAuBjBA,KAvBiB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAApB"},"metadata":{},"sourceType":"module"}